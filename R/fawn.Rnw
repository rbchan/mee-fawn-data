\documentclass[12pt]{article}



\usepackage[vmargin=1in,hmargin=1in]{geometry}
\usepackage[parfill]{parskip}
\usepackage[pdftex]{hyperref}
\usepackage{graphicx}
\usepackage{setspace}
\usepackage{bm}
\usepackage{verbatim}
\usepackage{amsmath}

\hypersetup{pdfstartview={Fit},hidelinks}


\newcommand{\bs}{{\bm s}}
\newcommand{\bsi}{{\bm s}_i}
\newcommand{\bx}{{\bm x}}
\newcommand{\bxj}{{\bm x}_j}
\newcommand{\by}{{\bm y}}
\newcommand{\bu}{{\bm u}}
\newcommand{\bui}{{\bm u}_i}
\newcommand{\buk}{{\bm u}_{k}}
\newcommand{\buik}{{\bm u}_{ik}}
\newcommand{\ed}{\|\bx - \bx'\|}
\newcommand{\cS}{\mathcal{S} }
\newcommand{\cT}{\mathcal{T} }

\everymath{\displaystyle}

\begin{document}

{\large
Supplement 2: Gibbs sampler, data, and code for fitting the model \\

\vspace{5mm}
Estimating recruitment from capture-recapture data by modeling spatio-temporal variation in birth and age-specific survival rates \\
}


\vspace{10mm}
Richard B. Chandler$^{1*}$, Kristin Engebretsen$^1$, Michael J. Cherry$^2$, Elina P. Garrison$^3$, and Karl V. Miller$^1$ \\

\vspace{5mm}
$^1$ University of Georgia, Warnell School of Forestry and Natural Resources \\
$^2$ Virginia Tech, Department of Fish and Wildlife Conservation \\
$^3$ Florida Fish and Wildlife Conservation Commission \\
\vspace{20mm}

\clearpage
\section{{\tt R} function implementing the Gibbs sampler}
%{\footnotesize
%\verbatiminput{fawn-mcmc.R}
%}


\normalsize

\clearpage
\section{{\tt R} code for running the Gibbs sampler}
%{\footnotesize
%\verbatiminput{fawn.R}
%}
Load the data and source the R code with the Gibbs sampler above.
<<>>=
load("../data/fawnData.gzip")
source("fawn-mcmc-dlife.R")
@

Run a single short Markov chain. In practice, several thousand
iterations will be required.
<<fm1,eval=FALSE>>=
fm1 <- scrOpenD(y.data=yDec,
                bday.range=bdRangeDec,
                x=jd9$x,
                M=150,
                niter=100,
                buffer=700,
                lifemod="exponential",
                Rage=180,
                birthWindow=c(1, 150),
                upper.life=365,
                oper=operDec,
                report=10,
                ## tune order: sig0, sig1, lam0, bday.bar, bay.var,
                ##             bday, omega0, omega1, life, s
                tune=c(25, 3.6, 0.023, 5, 4.4, 30,
                       0.18, 0.25, 55, 300))
@


Inspect the results. The \verb+fm1+ object contains all the results
needed to produce the figures in the paper.
<<str1>>=
str(fm1)
@

The traceplots and posterior densities can be viewed with the
\verb+coda+ package.
<<>>=
library(coda)
mc1 <- mcmc(fm1$samples)
#plot(mc1[,1:4]) # First 4 parameters only
plot(mc1) # First 4 parameters only
@


You can use the \verb+parallel+ package to run multiple chains in
parallel.


<<fm1p,eval=FALSE>>=
library(parallel)
(nCores <- min(detectCores()-1,8))
cl1 <- makeCluster(nCores)
clusterExport(cl1, c("scrOpenD", "jd9", "y9",
                     "yDec", "operDec", "bdRangeDec"))
clusterSetRNGStream(cl1, iseed=98210)

out1p1e <- clusterEvalQ(cl1, {
    fm1p <- scrOpenD(y.data=yDec,
                      bday.range=bdRangeDec,
                      x=jd9$x,
                      M=150,
                      niter=72000,
                      buffer=700,
                      lifemod="exponential",
                      Rage=180,
                      birthWindow=c(1, 150),
                      upper.life=365,
                      oper=operDec,
                      report=0,
                      tune=c(25, 3.6, 0.023, 5, 4.4, 30,
                             0.18, 0.25, 55, 300))
    return(fm1p)
})
@

The MCMC samples can be put in a \verb+mcmc.list+:
<<mc1p,eval=FALSE>>=
mc1p <- as.mcmc.list(lapply(out1p1e, function(x) mcmc(x$samples)))
@



\end{document}
